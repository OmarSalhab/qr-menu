generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Legacy enum Category retained temporarily for backward compatibility during migration.
enum Category {
  MEALS
  SNACKS
  DESSERTS
  DRINKS
}

// New dynamic category model. After refactor completes and all code switches to this,
// we will drop the legacy enum field from Item/SpecialItem.
model CategoryModel {
  id          String   @id @default(cuid())
  name        String   // internal name / slug-like (unique per store)
  display     String   // Arabic display label
  order       Int      @default(0)
  storeId     String
  store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)
  items       Item[]    @relation("CategoryModelItems")
  specialItems SpecialItem[] @relation("CategoryModelSpecialItems")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([storeId, name])
  @@index([storeId, order])
}

enum ThemeMode {
  LIGHT
  DARK
}

enum FontStyle {
  CLASSIC
  ELEGANT
}

model Store {
  id          String  @id @default(cuid())
  username    String  @unique
  password    String
  name        String
  description String?

  // Customization
  brandColor  String  @default("oklch(60% 0.17 264)")
  bannerUrl   String?
  logoUrl     String?
  timezone    String  @default("Asia/Amman")
  workingHours Json?
  themeMode   ThemeMode @default(LIGHT)
  fontStyle   FontStyle @default(CLASSIC)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  items       Item[]
  specialItems SpecialItem[]
  categories  CategoryModel[]
}

model Item {
  id        String   @id @default(cuid())
  name      String
  description String?
  price     Float
  currency  String   @default("JD")
  imageUrl  String
  available Boolean  @default(true)
  category  Category        // legacy enum (to be removed)
  categoryId String?        // new dynamic category relation (nullable until migration finishes)
  categoryRef CategoryModel? @relation("CategoryModelItems", fields: [categoryId], references: [id])

  storeId   String
  store     Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SpecialItem {
  id          String   @id @default(cuid())
  name        String
  description String?
  price       Float
  prevPrice   Float
  currency    String   @default("JD")
  imageUrl    String
  category    Category         // legacy enum (to be removed)
  categoryId  String?
  categoryRef CategoryModel? @relation("CategoryModelSpecialItems", fields: [categoryId], references: [id])
  dateFrom    DateTime
  dateTo      DateTime
  available   Boolean  @default(true)

  storeId     String
  store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
